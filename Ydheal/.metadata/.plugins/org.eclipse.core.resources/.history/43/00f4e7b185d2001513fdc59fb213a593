package controller;

import java.sql.DriverManager;
import java.sql.SQLException;

import javax.swing.JOptionPane;

//Início da classe de conexão//
public class ConexaoMySQL {

	public static String status = "Não conectou...";

	// Método Construtor da Classe//

	public ConexaoMySQL() {

	}

	// Método de Conexão//
	public static java.sql.Connection getConexaoMySQL() {

		java.sql.Connection connection = null; // atributo do tipo Connection

		try {

			// Carregando o JDBC Driver padrão
			String driverName = "com.mysql.jdbc.Driver";
			Class.forName(driverName);

			// Configurando a nossa conexão com um banco de dados//

			String serverName = "localhost"; // caminho do servidor do BD
			String mydatabase = "db_serralheria"; // nome do seu banco de dados
			String url = "jdbc:mysql://" + serverName + "/" + mydatabase;
			String username = "root"; // nome de um usuário de seu BD
			String password = ""; // sua senha de acesso

			connection = DriverManager.getConnection(url, username, password);

			// Testa sua conexão//

			if (connection != null) {
				status = ("STATUS---> Conectado com sucesso!");

			} else {

				status = ("STATUS---> Não foi possivel realizar conexão");

			}

			return connection;

		}

		catch (ClassNotFoundException e) { // Driver não encontrado

			JOptionPane.showMessageDialog(null,
					"O driver expecificado nao foi encontrado.");

			return null;

		} catch (SQLException e) {

			// Não conseguindo se conectar ao banco

			JOptionPane.showMessageDialog(null,
					"Nao foi possivel conectar ao Banco de Dados.");

			return null;

		}

	}

	// Método que retorna o status da sua conexão//

	public String statusConection() {

		return status;

	}

	// Método que fecha sua conexão//

	public boolean FecharConexao() {

		try {

			ConexaoMySQL.getConexaoMySQL().close();

			return true;

		} catch (SQLException e) {

			return false;

		}

	}

	// Método que reinicia sua conexão//

	public java.sql.Connection ReiniciarConexao() {

		FecharConexao();

		return ConexaoMySQL.getConexaoMySQL();

	}

	public void close() throws SQLException {

		ConexaoMySQL.getConexaoMySQL().close();

	}

}
