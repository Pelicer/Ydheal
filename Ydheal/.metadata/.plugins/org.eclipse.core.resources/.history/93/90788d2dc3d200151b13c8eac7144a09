package view.jFrames;

import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.border.EmptyBorder;
import javax.swing.border.LineBorder;
import javax.swing.event.AncestorEvent;
import javax.swing.event.AncestorListener;
import javax.swing.table.DefaultTableModel;

import modelSuplerclasses.Orcamento;
import view.jFrames.cadastros.JFCOrcamento_materiais;
import view.jFrames.visualizar_registros.JFVisualizarOrcamento;
import controller.ConexaoMySQL;

public class JFOrcamento extends JFrame {

	int count = 0;
	private DefaultTableModel ModeloJTOrc = new DefaultTableModel();
	private JPanel contentPane;
	private JTextField tfClienteId;
	private JTextField tfOrcamentoId;
	private JTextField tfModeloId;
	private JTable tabletbl_orcamento;
	private JScrollPane scrollPane;

	/**
	 * Create the frame.
	 */
	public JFOrcamento() {
		setTitle("Or\u00E7amento");
		setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		setBounds(100, 100, 990, 740);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		JPanel panel = new JPanel();
		panel.setLayout(null);
		panel.setBorder(new LineBorder(new Color(0, 0, 0)));
		panel.setBounds(10, 22, 966, 88);
		contentPane.add(panel);

		JLabel lblOrcamento = new JLabel("Or\u00E7amento");
		// Adicionando imagem.
		Image imgOrcamento = new ImageIcon(this.getClass().getResource(
				"/50px/orcamento.png")).getImage();
		lblOrcamento.setIcon(new ImageIcon(imgOrcamento));
		lblOrcamento.addAncestorListener(new AncestorListener() {
			public void ancestorAdded(AncestorEvent arg0) {
			}

			public void ancestorMoved(AncestorEvent event) {
			}

			public void ancestorRemoved(AncestorEvent event) {
			}
		});
		lblOrcamento.setFont(new Font("Tahoma", Font.PLAIN, 20));
		lblOrcamento.setBounds(10, 6, 215, 79);
		panel.add(lblOrcamento);

		JLabel label_8 = new JLabel("Cliente Id:");
		label_8.setBounds(235, 11, 80, 14);
		panel.add(label_8);

		tfClienteId = new JTextField();
		tfClienteId.setColumns(10);
		tfClienteId.setBounds(325, 8, 200, 20);
		panel.add(tfClienteId);

		JLabel label_9 = new JLabel("Or\u00E7amento Id:");
		label_9.setBounds(235, 42, 91, 14);
		panel.add(label_9);

		tfOrcamentoId = new JTextField();
		tfOrcamentoId.setColumns(10);
		tfOrcamentoId.setBounds(325, 39, 200, 20);
		panel.add(tfOrcamentoId);

		JLabel lblModelo = new JLabel("Modelo ID:");
		lblModelo.setBounds(535, 11, 70, 14);
		panel.add(lblModelo);

		tfModeloId = new JTextField();
		tfModeloId.setBounds(631, 6, 200, 20);
		panel.add(tfModeloId);
		tfModeloId.setColumns(10);

		JButton btnFiltrar = new JButton("Filtrar");
		// Adicionando imagem.
		Image imgFiltrar = new ImageIcon(this.getClass().getResource(
				"/16px/search.png")).getImage();
		btnFiltrar.setIcon(new ImageIcon(imgFiltrar));
		btnFiltrar.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
			}
		});
		btnFiltrar.setBounds(349, 121, 116, 23);
		contentPane.add(btnFiltrar);

		JButton btnImprimir = new JButton("Imprimir");
		// Adicionando imagem.
		Image imgImprimir = new ImageIcon(this.getClass().getResource(
				"/16px/imprimir.png")).getImage();
		btnImprimir.setIcon(new ImageIcon(imgImprimir));
		btnImprimir.setBounds(475, 121, 116, 23);
		contentPane.add(btnImprimir);

		JButton btnLimpar = new JButton("Limpar");
		// Adicionando imagem.
		Image imgLimpar = new ImageIcon(this.getClass().getResource(
				"/16px/limpar.png")).getImage();
		btnLimpar.setIcon(new ImageIcon(imgLimpar));
		btnLimpar.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				tfClienteId.setText("");
				tfModeloId.setText("");
				tfOrcamentoId.setText("");
				tfClienteId.grabFocus();
			}
		});
		btnLimpar.setBounds(223, 121, 116, 23);
		contentPane.add(btnLimpar);

		JButton btnAlterar = new JButton("Alterar");
		// Adicionando imagem.
		Image imgAlterar = new ImageIcon(this.getClass().getResource(
				"/16px/editar.png")).getImage();
		btnAlterar.setIcon(new ImageIcon(imgAlterar));
		btnAlterar.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {

				Orcamento o = new Orcamento();

				SimpleDateFormat Formatodatabr = new SimpleDateFormat(
						"dd/MM/yyyy");

				String comando = "select orcamento_id, orcamento_metodoPagamento, orcamento_valorMaoDeObra, modelo_id, visita_id, orcamento_valorTotal from tbl_orcamento where cliente_id = "
						+ ModeloJTOrc.getValueAt(
								tabletbl_orcamento.getSelectedRow(), 0) + ";";

				count = 0;

				try {

					Class.forName("com.mysql.jdbc.Driver");

					// cria a conecxão
					java.sql.Connection con = ConexaoMySQL.getConexaoMySQL();

					// não sei oq isso faz kk
					java.sql.Statement st = con.createStatement();

					ResultSet resultSet = st.executeQuery(comando);

					while (resultSet.next()) {

						String id = resultSet.getString("orcamento_id");
						String metodoPagamento = resultSet
								.getString("orcamento_metodoPagamento");
						String maoObra = resultSet
								.getString("orcamento_valorMaoDeObra");

						String modeloId = resultSet.getString("modeloId");
						String visitaId = resultSet.getString("visita_id");
						String valorTotal = resultSet
								.getString("orcamento_valorTotal");

						o.setId(Integer.parseInt(id));
						o.setMetodoPagamento(Double
								.parseDouble(metodoPagamento));
						o.setMaoDeObra(Double.parseDouble(maoObra));
						o.setValorTotal(Double.parseDouble(valorTotal));
					}

					st.close();
					con.close();

				}// fim do try
				catch (Exception ee) {
					ee.printStackTrace();
					JOptionPane.showMessageDialog(null, "Falha na consulta");
				}

				try {
					JFVisualizarOrcamento viewOrcamento = new JFVisualizarOrcamento();
					viewOrcamento.setVisible(true);
					viewOrcamento.setLocationRelativeTo(null);

				} catch (Exception eee) {
					eee.printStackTrace();
				}

			}
		});
		btnAlterar.setBounds(601, 121, 116, 23);
		contentPane.add(btnAlterar);
		btnAlterar.setToolTipText("Alterar Registro");

		JLabel labelregistrosencontrados = new JLabel("0");
		labelregistrosencontrados.setBounds(737, 153, 46, 14);
		contentPane.add(labelregistrosencontrados);
		labelregistrosencontrados.setHorizontalAlignment(SwingConstants.CENTER);
		labelregistrosencontrados.setForeground(new Color(0, 128, 0));

		JButton btnNovo = new JButton("Novo");
		// Adicionando imagem.
		Image imgNovo = new ImageIcon(this.getClass().getResource(
				"/16px/ok.png")).getImage();
		btnNovo.setIcon(new ImageIcon(imgNovo));
		btnNovo.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {

				// Abre o formulário de cadastro de orçamentos.
				try {
					JFCOrcamento_materiais frame = new JFOrcamento_materiais();
					frame.setVisible(true);
					frame.setLocationRelativeTo(null);
				} catch (Exception error) {
					error.printStackTrace();
				}

				while (tabletbl_orcamento.getModel().getRowCount() > 0) {
					((DefaultTableModel) tabletbl_orcamento.getModel())
							.removeRow(0);
				}

				Carregar_tela_orcamento();

				labelregistrosencontrados.setText(String.valueOf(count));

			}
		});

		btnNovo.setBounds(97, 121, 116, 23);
		contentPane.add(btnNovo);
		btnNovo.setToolTipText("Criar Novo Registro");

		JButton btnExcluir = new JButton("Excluir");
		// Adicionando imagem.
		Image imgExcluir = new ImageIcon(this.getClass().getResource(
				"/16px/cancelar.png")).getImage();
		btnExcluir.setIcon(new ImageIcon(imgExcluir));
		btnExcluir.setBounds(727, 121, 116, 23);
		contentPane.add(btnExcluir);
		btnExcluir.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {

				// pede para confirmar a resposta
				int resposta = JOptionPane.showConfirmDialog(null,
						"Deseja realmente excluir os clientes selecionados?",
						"Confirmar exclusões ", JOptionPane.YES_NO_OPTION);

				// chaca resposta e faz o de acordo
				if (resposta == JOptionPane.YES_OPTION) {

					// pega as linhas selecionadas
					int x[] = tabletbl_orcamento.getSelectedRows();

					// exclui as linhas selecionadas

					int id = 0;

					for (int i = x.length - 1; i >= 0; i--) {

						// obtem o id da linha selecionada
						id = Integer.parseInt(String.valueOf(ModeloJTOrc
								.getValueAt(x[i], 0)));

						ModeloJTOrc.removeRow(x[i]);

						String comando = "DELETE FROM tbl_orcamento WHERE orcamento_id = "
								+ id + ";";

						try {

							Class.forName("com.mysql.jdbc.Driver");

							// cria a conecxão
							java.sql.Connection con = ConexaoMySQL
									.getConexaoMySQL();

							// não sei oq isso faz kk
							java.sql.Statement st = con.createStatement();

							st.execute(comando);

							st.close();
							con.close();

						}// fim do try
						catch (Exception ee) {
							ee.printStackTrace();
							JOptionPane.showMessageDialog(null,
									"Falha na exclusão");

						}

					}// fecha o for de exclusão

				} else if (resposta == JOptionPane.NO_OPTION) {
					// Usuário clicou em não. Executar o código correspondente.

				}

			}

		});
		btnExcluir.setToolTipText("Excluir Registro");

		JLabel label_7 = new JLabel("Registros Encontrados");
		label_7.setBounds(793, 150, 141, 14);
		contentPane.add(label_7);

		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 175, 946, 511);
		contentPane.add(scrollPane);
		// Criando os títulos.

		{
			ModeloJTOrc.addColumn("ID");
			ModeloJTOrc.addColumn("ID Modelo.");
			ModeloJTOrc.addColumn("ID Visita");
			ModeloJTOrc.addColumn("Valor");
		}

		tabletbl_orcamento = new JTable(ModeloJTOrc) {

			public boolean isCellEditable(int row, int column) {
				return false;
			}

		};

		// Impede a reordenação das colunas.
		tabletbl_orcamento.getTableHeader().setReorderingAllowed(false);

		scrollPane.setViewportView(tabletbl_orcamento);

		// Verificação de click duplo.
		tabletbl_orcamento.addMouseListener(new MouseAdapter() {
			public void mouseClicked(MouseEvent e) {
				if (e.getClickCount() == 2) {

					Orcamento o = new Orcamento();

					SimpleDateFormat Formatodatabr = new SimpleDateFormat(
							"dd/MM/yyyy");

					String comando = "select orcamento_id, orcamento_metodoPagamento, orcamento_valorMaoDeObra, modelo_id, visita_id from tbl_orcamento where cliente_id = "
							+ ModeloJTOrc.getValueAt(
									tabletbl_orcamento.getSelectedRow(), 0)
							+ ";";

					count = 0;

					try {

						Class.forName("com.mysql.jdbc.Driver");

						// cria a conecxão
						java.sql.Connection con = ConexaoMySQL
								.getConexaoMySQL();

						// não sei oq isso faz kk
						java.sql.Statement st = con.createStatement();

						ResultSet resultSet = st.executeQuery(comando);

						while (resultSet.next()) {

							String id = resultSet.getString("orcamento_id");
							String metodoPagamento = resultSet
									.getString("orcamento_metodoPagamento");
							String maoObra = resultSet
									.getString("orcamento_valorMaoDeObra");
							String modeloId = resultSet.getString("modeloId");
							String visitaId = resultSet.getString("visita_id");
							String valorTotal = resultSet
									.getString("orcamento_valorTotal");

							o.setId(Integer.parseInt(id));
							o.setMetodoPagamento(Double
									.parseDouble(metodoPagamento));
							o.setMaoDeObra(Double.parseDouble(maoObra));
							o.setModeloId(Integer.parseInt(modeloId));
							o.setVisitaId(Integer.parseInt(visitaId));
							o.setValorTotal(Double.parseDouble(valorTotal));

						}

						st.close();
						con.close();

					}// fim do try
					catch (Exception ee) {
						ee.printStackTrace();
						JOptionPane
								.showMessageDialog(null, "Falha na consulta");
					}

					try {
						JFVisualizarOrcamento viewCliente = new JFVisualizarOrcamento();
						viewCliente.setVisible(true);
						viewCliente.setLocationRelativeTo(null);

					} catch (Exception eee) {
						eee.printStackTrace();
					}

				}
			}
		});

		// Settando os tamanhos de coluna.
		tabletbl_orcamento.getColumnModel().getColumn(0).setPreferredWidth(1);
		tabletbl_orcamento.getColumnModel().getColumn(1).setPreferredWidth(1);
		tabletbl_orcamento.getColumnModel().getColumn(2).setPreferredWidth(100);
		tabletbl_orcamento.getColumnModel().getColumn(3).setPreferredWidth(1);

		// Carregando a tela...
		Carregar_tela_orcamento();

		labelregistrosencontrados.setText(String.valueOf(count));

	} // Fim da tela inicial.

	public void Cod(String comando) {

		SimpleDateFormat Formatodatabr = new SimpleDateFormat("dd/MM/yyyy");

		count = 0;

		try {

			Class.forName("com.mysql.jdbc.Driver");

			// cria a conecxão
			java.sql.Connection con = ConexaoMySQL.getConexaoMySQL();

			// não sei oq isso faz kk
			java.sql.Statement st = con.createStatement();

			ResultSet resultSet = st.executeQuery(comando);

			while (resultSet.next()) {

				String id = resultSet.getString("orcamento_id");
				String modeloId = resultSet.getString("modeloId");
				String visitaId = resultSet.getString("visita_id");
				String valorTotal = resultSet.getString("orcamento_valorTotal");

				// cont = (cont + 1);

				ModeloJTOrc.addRow(new Object[] { id, modeloId, visitaId,
						valorTotal, });

			}

			st.close();
			con.close();

		}// fim do try
		catch (Exception e) {
			e.printStackTrace();
			JOptionPane.showMessageDialog(null, "Falha na consulta");
		}
	}

	public void Carregar_tela_orcamento() {

		SimpleDateFormat Formatodatabr = new SimpleDateFormat("dd/MM/yyyy");

		String comando = "select orcamento_id, orcamento_valorTotal, orcamento_metodoPagamento, orcamento_valorMaoDeObra, modelo_id, visita_id from tbl_orcamento;";

		count = 0;

		try {

			Class.forName("com.mysql.jdbc.Driver");

			// cria a conecxão
			java.sql.Connection con = ConexaoMySQL.getConexaoMySQL();

			// não sei oq isso faz kk
			java.sql.Statement st = con.createStatement();

			ResultSet resultSet = st.executeQuery(comando);

			while (resultSet.next()) {

				String id = resultSet.getString("cliente_id");
				String modelo_id = resultSet.getString("modelo_id");
				String visita_id = resultSet.getString("visita_id");
				String valorTotal = resultSet.getString("orcamento_valorTotal");
				count = (count + 1);

				ModeloJTOrc.addRow(new Object[] { id, modelo_id, visita_id,
						valorTotal });

			}

			st.close();
			con.close();

		}// fim do try
		catch (Exception e) {
			e.printStackTrace();
			JOptionPane.showMessageDialog(null, "Falha na consulta");
		}

	}
}
